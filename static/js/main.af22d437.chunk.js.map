{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","shift","isNextDisabled","isPrevDisabled","prevButtonHandler","props","step","itemWidth","setState","prevState","scrolledDist","nextButtonHandler","images","frameSize","endOfScroll","length","this","animationDuration","containerWidthStyle","width","listStyleTransform","transform","transition","imageWidth","className","style","map","img","src","alt","type","disabled","onClick","Component","App","infinite","handleChange","event","currentTarget","id","value","checked","htmlFor","min","max","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af22d437.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step:string;\n  frameSize:string;\n  itemWidth:string;\n  animationDuration:string;\n};\n\ninterface State {\n  shift: number,\n  isNextDisabled: boolean,\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    shift: 0,\n    isNextDisabled: false,\n    isPrevDisabled: true,\n  };\n\n  prevButtonHandler = () => {\n    const {\n      step,\n      itemWidth,\n    } = this.props;\n\n    this.setState((prevState) => {\n      const scrolledDist = prevState.shift - +step * +itemWidth;\n\n      return (scrolledDist >= 0)\n        ? { shift: scrolledDist, isPrevDisabled: false, isNextDisabled: false }\n        : { shift: 0, isPrevDisabled: true, isNextDisabled: false };\n    });\n  };\n\n  nextButtonHandler = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n    } = this.props;\n\n    this.setState((prevState) => {\n      const scrolledDist = prevState.shift + +step * +itemWidth;\n      const endOfScroll = (images.length - +frameSize) * +itemWidth;\n\n      return (scrolledDist <= endOfScroll)\n        ? { shift: scrolledDist, isPrevDisabled: false, isNextDisabled: false }\n        : { shift: endOfScroll, isPrevDisabled: false, isNextDisabled: true };\n    });\n  };\n\n  render() {\n    const { shift, isNextDisabled, isPrevDisabled } = this.state;\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const containerWidthStyle = {\n      width: `${+frameSize * +itemWidth}px`,\n    };\n\n    const listStyleTransform = {\n      transform: `translateX(${-shift}px)`,\n      transition: `${animationDuration}ms`,\n    };\n\n    const imageWidth = {\n      width: `${+itemWidth}px`,\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__container\"\n          style={containerWidthStyle}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={listStyleTransform}\n          >\n            {images.map((img: string) => (\n              <li key={img} className=\"Carousel__item\">\n                <img\n                  className=\"Carousel__img\"\n                  src={img}\n                  alt={img}\n                  style={imageWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            disabled={isPrevDisabled}\n            onClick={this.prevButtonHandler}\n          >\n            &larr;\n          </button>\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            data-cy=\"next\"\n            disabled={isNextDisabled}\n            onClick={this.nextButtonHandler}\n          >\n            &rarr;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable default-case */\nimport React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step:string;\n  frameSize:string;\n  itemWidth:string;\n  animationDuration:string;\n  infinite:boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: '3',\n    frameSize: '3',\n    itemWidth: '130',\n    animationDuration: '1000',\n    infinite: false,\n  };\n\n  handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    switch (event.currentTarget.id) {\n      case 'step':\n        this.setState({ step: event.currentTarget.value });\n        break;\n      case 'frameSize':\n        this.setState({ frameSize: event.currentTarget.value });\n        break;\n      case 'itemWidth':\n        this.setState({ itemWidth: event.currentTarget.value });\n        break;\n      case 'animationDuration':\n        this.setState({ animationDuration: event.currentTarget.value });\n        break;\n      case 'infinite':\n        this.setState({ infinite: event.currentTarget.checked });\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"App__box\">\n          <label htmlFor=\"step\">\n            Step - number of images scrolled per click\n          </label>\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"step\"\n            value={step}\n            min=\"1\"\n            max=\"10\"\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frameSize\">\n            Frame size - number of images displayed at the same time\n          </label>\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"frameSize\"\n            value={frameSize}\n            min=\"1\"\n            max=\"10\"\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"itemWidth\">\n            Item width - customize image width\n          </label>\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"itemWidth\"\n            value={itemWidth}\n            min=\"130\"\n            max=\"200\"\n            step=\"10\"\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration - time in ms to show the new portion\n          </label>\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            min=\"1000\"\n            max=\"3000\"\n            step=\"500\"\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"infinite\">Infinite</label>\n          <input\n            className=\"App__input\"\n            type=\"checkbox\"\n            id=\"infinite\"\n            checked={infinite}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}